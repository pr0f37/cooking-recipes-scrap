# syntax=docker/dockerfile:1
ARG PYTHON_VERSION=3.11.5
FROM python:${PYTHON_VERSION}-slim as base

WORKDIR /app
RUN python -m venv /opt/venv
# Make sure we use the virtualenv:
ENV PATH="/opt/venv/bin:$PATH"

RUN --mount=type=cache,target=/root/.cache/pip \
    --mount=type=bind,source=requirements.txt,target=requirements.txt \
    python -m pip install -r requirements.txt
RUN --mount=type=bind,source=pyproject.toml,target=pyproject.toml \
    --mount=type=bind,source=poetry.toml,target=poetry.toml \
    --mount=type=bind,source=poetry.lock,target=poetry.lock \
    poetry install --no-directory --without db
RUN --mount=type=bind,source=requirements.txt,target=requirements.txt \
    python -m pip uninstall -y -r requirements.txt


FROM python:${PYTHON_VERSION}-slim as build
COPY --from=base /opt/venv /opt/venv
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
WORKDIR /app

COPY cr_scraper cr_scraper
COPY tests tests
COPY --chmod=755 docker/test/entrypoint.sh .
COPY --chmod=755 docker/test/entrypoint.flake8.sh .

ENV PATH="/opt/venv/bin:$PATH"
ENTRYPOINT [ "./entrypoint.sh" ]
CMD ["all"]
